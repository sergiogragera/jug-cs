group 'com.fourtic'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'org.apache.maven:maven-plugin-api:3.5.0-alpha-1'
    compileOnly 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.5'
    compile gradleApi()
}

jar {
    extension = 'maven-plugin'
}

task pluginDescriptor(type: Exec) {
    commandLine '/home/sergio/opensat/apache-maven-3.1.1/bin/mvn', '-e', '-B', 'org.apache.maven.plugins:maven-plugin-plugin:3.2:descriptor'
    doFirst {
        final File pom = project.file('pom.xml')
        install.repositories.mavenInstaller.pom.writeTo(pom)
        assert pom.file, "[$pom.canonicalPath] was not created"

        pom.text = pom.text.
                replace('<groupId>unknown</groupId>', "<groupId>${project.group}</groupId>").
                replace('<artifactId>empty-project</artifactId>', "<artifactId>${project.name}</artifactId>").
                replace('<version>0</version>', """
                                                              |<version>${version}</version>
                                                              |  <packaging>maven-plugin</packaging>
                                                              |  <build>
                                                              |    <directory>\${project.basedir}/build</directory>
                                                              |    <outputDirectory>\${project.build.directory}/classes/main</outputDirectory>
                                                              |  </build>
                                                              |""".stripMargin().trim())
    }
    doLast {
        final pluginDescriptor = new File(new File('build/classes/main'), 'META-INF/maven/plugin.xml')
        assert pluginDescriptor.file, "[$pluginDescriptor.canonicalPath] was not created"
        println "Plugin descriptor file:$pluginDescriptor.canonicalPath is created successfully"
    }
}

build.finalizedBy(pluginDescriptor)